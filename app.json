[{"name": "app.py", "content": "from shiny.express import input, output, render, ui\nfrom shinywidgets import render_plotly\nimport plotly.express as px\nfrom palmerpenguins import load_penguins\n\n# Define the correct login credentials\nVALID_USERNAME = \"user\"\nVALID_PASSWORD = \"password\"\n\n# Global variable to track login status\nlogin_status = False\n\n# Define the Login page UI\ndef login_page():\n    return ui.page_fluid(\n        ui.h2(\"Login Page\"),\n        ui.input_text(\"username\", \"Username\", \"\"),\n        ui.input_password(\"password\", \"Password\", \"\"),\n        ui.input_action_button(\"login_btn\", \"Login\"),\n        ui.output_text(\"login_message\")\n    )\n\n# Define the Main App (Penguins dashboard) UI\ndef main_page():\n    return ui.page_fluid(\n        ui.layout_sidebar(\n            ui.panel_sidebar(\n                ui.input_selectize(\n                    \"var\", \"Select variable\",\n                    [\"bill_length_mm\", \"bill_depth_mm\", \"flipper_length_mm\", \"body_mass_g\", \"year\"]\n                ),\n                ui.input_numeric(\"bins\", \"Number of bins\", 30)\n            ),\n            ui.panel_main(\n                ui.output_plot(\"hist_plot\")\n            )\n        )\n    )\n\n# Function to dynamically switch between login and main page based on login status\ndef app_ui():\n    if login_status:\n        return main_page()  # Show the main app if logged in\n    else:\n        return login_page()  # Show the login page if not logged in\n\n# Server logic\ndef server(input, output, session):\n    global login_status  # To update login status\n\n    # Render the login message\n    @output\n    @render.text\n    def login_message():\n        return \"\"\n\n    # Event handler for login button click\n    @input.login_btn\n    def check_login():\n        global login_status\n        # Get user input for username and password\n        username = input.username()\n        password = input.password()\n\n        # Check if the credentials match\n        if username == VALID_USERNAME and password == VALID_PASSWORD:\n            login_status = True  # Set login status to True if credentials are valid\n            session.reload()  # Reload the session to show the main app\n        else:\n            output.login_message.set(\"Invalid username or password\")\n\n    # If logged in, render the histogram plot\n    if login_status:\n        @output\n        @render_plotly\n        def hist_plot():\n            df = load_penguins()\n            return px.histogram(df, x=input.var(), nbins=input.bins())\n\n# The app automatically runs with ShinyLive\n", "type": "text"}]