[{"name": "app.py", "content": "from shiny.express import input, render, ui, reactive\nfrom shinywidgets import render_plotly\nimport shiny\n\n# A simple in-memory check for username and password (you can replace it with something more secure)\nVALID_USERNAME = \"user\"\nVALID_PASSWORD = \"password\"\n\n# Create a reactive value to track whether the user is logged in\nlogin_status = reactive.Value(False)\n\n# Login page UI\ndef login_page():\n    return ui.page_fluid(\n        ui.h2(\"Login\"),\n        ui.input_text(\"username\", \"Username\", \"\"),\n        ui.input_password(\"password\", \"Password\", \"\"),\n        ui.input_action_button(\"login_btn\", \"Login\"),\n        ui.output_text(\"login_message\")\n    )\n\n# Main app UI (Penguins dashboard)\ndef main_page():\n    with ui.sidebar():\n        ui.input_selectize(\n            \"var\", \"Select variable\",\n            [\"bill_length_mm\", \"bill_depth_mm\", \"flipper_length_mm\", \"body_mass_g\", \"year\"]\n        )\n        ui.input_numeric(\"bins\", \"Number of bins\", 30)\n\n    with ui.card(full_screen=True):\n        @render_plotly\n        def hist():\n            import plotly.express as px\n            from palmerpenguins import load_penguins\n            return px.histogram(load_penguins(), x=input.var(), nbins=input.bins())\n\n# The main UI that dynamically switches between the login page and the main app\ndef app_ui():\n    # Conditionally display either login page or the main app page\n    return ui.page_fluid(\n        ui.output_ui(\"page_content\")  # Placeholder to dynamically show either login or main page\n    )\n\n# Server logic\ndef server(input, output, session):\n    # Dynamically render the appropriate page based on login status\n    @output\n    @render.ui\n    def page_content():\n        if login_status():\n            return main_page()  # Show the main app if logged in\n        else:\n            return login_page()  # Show the login page if not logged in\n\n    # Check login credentials when the login button is clicked\n    @reactive.Effect\n    @reactive.event(input.login_btn)\n    def check_login():\n        username = input.username()\n        password = input.password()\n\n        # Validate the credentials\n        if username == VALID_USERNAME and password == VALID_PASSWORD:\n            login_status.set(True)  # Set login status to True if valid\n        else:\n            ui.update_text(\"login_message\", \"Invalid username or password!\")\n\n# Create the Shiny app\napp = shiny.App(app_ui, server)\n", "type": "text"}]