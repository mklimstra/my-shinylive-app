[{"name": "app.py", "content": "from shiny import App, ui, reactive\n\n# Define UI without server logic\napp_ui = ui.page_sidebar(\n    ui.sidebar(\n        ui.input_slider(\"simple_input\", \"Simple Input\", 1, 10, 5),\n        ui.input_action_button(\"run_stage\", \"Run Stage\")  # Button to simulate an action\n    ),\n    ui.output_text_verbatim(\"outputText\")  # Display the selected input value\n)\n\n# Simple reactive function to update UI based on slider value\ndef server(input, output, session):\n    @output\n    @reactive.text\n    def outputText():\n        # Return the value of the slider input when the button is clicked\n        return f\"You selected: {input.simple_input()}\"\n\n# Create the app\napp = App(app_ui, server)\n", "type": "text"}, {"name": "fcn_thelen_muscle.py", "content": "import numpy as np\n\ndef thelen_muscle(onoff, freq, excursion, L0, F0, Vx, af, tau_a, tau_d, path):\n    onset, offset = onoff\n    dt = 0.001 / freq\n    V0 = Vx * L0\n    penn0 = 0.087\n    w = L0 * np.sin(penn0)\n    \n    # Cycle time and position\n    t = np.arange(0, 1.25 / freq, dt)\n    position = excursion * np.sin(2 * np.pi * freq * t)\n    \n    return {\n        \"position\": position,\n        \"onset\": onset,\n        \"offset\": offset,\n        \"time\": t\n    }\n", "type": "text"}, {"name": "fcn_thelen_opt.py", "content": "import numpy as np\nfrom fcn_thelen_muscle import thelen_muscle\n\ndef thelen_muscle_opt(onoff, freq, excursion, L0, F0, Vx, af, tau_a, tau_d, path):\n    # Narrow the optimization range to speed up calculation\n    on_range = np.arange(20, 23)  # Reduced range\n    off_range = np.arange(26, 30)  # Reduced range\n    opt = np.array(np.meshgrid(on_range, off_range)).T.reshape(-1, 2)\n    \n    # Calculate power for each combination\n    power = np.array([thelen_muscle(row, freq, excursion, L0, F0, Vx, af, tau_a, tau_d, path=\"b\") for row in opt])\n    \n    # Optimized solution\n    max_power_idx = np.argmax([p['position'].sum() for p in power])\n    opt_sln = np.append(opt[max_power_idx], power[max_power_idx])\n    \n    return thelen_muscle(opt_sln[:2], freq, excursion, L0, F0, Vx, af, tau_a, tau_d, \"a\")\n", "type": "text"}]