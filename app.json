[{"name": "app.py", "content": "import mimetypes\nfrom math import ceil\nfrom typing import List\n\nfrom shiny.express import input, render, ui\n\nMAX_SIZE = 50000\nui.input_file(\"file1\", \"Choose a file to upload:\", multiple=True)\nui.input_radio_buttons(\"type\", \"Type:\", [\"Text\", \"Binary\"])\n\n\ndef format_hexdump(data: bytes) -> str:\n    hex_vals = [\"{:02x}\".format(b) for b in data]\n    hex_vals = group_into_blocks(hex_vals, 16)\n    hex_vals = [\" \".join(row) for row in hex_vals]\n    hex_vals = \"\\n\".join(hex_vals)\n    return hex_vals\n\n\ndef group_into_blocks(x: List[str], blocksize: int):\n    \"\"\"\n    Given a list, return a list of lists, where the inner lists each have `blocksize`\n    elements.\n    \"\"\"\n    return [\n        x[i * blocksize : (i + 1) * blocksize] for i in range(ceil(len(x) / blocksize))\n    ]\n\n\n@render.code\ndef file_content():\n    file_infos = input.file1()\n    if not file_infos:\n        return\n\n    # file_infos is a list of dicts; each dict represents one file. Example:\n    # [\n    #   {\n    #     'name': 'data.csv',\n    #     'size': 2601,\n    #     'type': 'text/csv',\n    #     'datapath': '/tmp/fileupload-1wnx_7c2/tmpga4x9mps/0.csv'\n    #   }\n    # ]\n    out_str = \"\"\n    for file_info in file_infos:\n        out_str += (\n            \"=\" * 47\n            + \"\\n\"\n            + file_info[\"name\"]\n            + \"\\nMIME type: \"\n            + str(mimetypes.guess_type(file_info[\"name\"])[0])\n        )\n        if file_info[\"size\"] > MAX_SIZE:\n            out_str += f\"\\nTruncating at {MAX_SIZE} bytes.\"\n\n        out_str += \"\\n\" + \"=\" * 47 + \"\\n\"\n\n        if input.type() == \"Text\":\n            with open(file_info[\"datapath\"], \"r\") as f:\n                out_str += f.read(MAX_SIZE)\n        else:\n            with open(file_info[\"datapath\"], \"rb\") as f:\n                data = f.read(MAX_SIZE)\n                out_str += format_hexdump(data)\n\n    return out_str\n", "type": "text"}]